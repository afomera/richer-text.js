{
  "version": 3,
  "sources": ["../../src/components/TipTapEditorBase.js"],
  "sourcesContent": ["import { LitElement } from \"lit\";\nimport { Editor } from \"@tiptap/core\";\n\n// Styles\nimport { normalize } from \"../styles/normalize\";\nimport { tiptapStyles } from \"../styles/tiptapStyles\";\n\nexport class TipTapEditorBase extends LitElement {\n  static get styles() {\n    return [normalize, tiptapStyles];\n  }\n\n  static get properties() {\n    return {\n      autofocus: { type: Boolean, reflect: true },\n      readonly: { type: Boolean, reflect: true },\n      placeholder: { type: String, reflect: true },\n      input: { type: String, reflect: true },\n      class: { type: String, reflect: true },\n      serializer: { type: String, reflect: true },\n      content: { type: String, reflect: true },\n\n      // Properties\n      editor: { state: true },\n      extensions: { state: true }\n    };\n  }\n\n  constructor() {\n    super();\n\n    this.autofocus = false;\n    this.class = \"\";\n    this.extensions = [];\n  }\n\n  _createEditorRootElement() {\n    if (this.shadowRoot.host.querySelector(\".text-editor-wrapper\")) {\n      return this.shadowRoot.host.querySelector(\".text-editor-wrapper\");\n    }\n\n    const element = document.createElement(\"div\");\n    element.classList.add(\"text-editor-wrapper\");\n    element.slot = \"editor\";\n    this.shadowRoot.host.appendChild(element);\n\n    return element;\n  }\n\n  emit(eventName, detail = {}) {\n    this.dispatchEvent(new CustomEvent(eventName, { detail, bubbles: true, composed: true }));\n  }\n\n  emitChange() {\n    this.emit(\"change\", {\n      html: this.getHTML(),\n      json: this.editor.getJSON(),\n    });\n\n    const inputElement = document.getElementById(this.input);\n\n    if (inputElement) {\n      inputElement.value = this.serializer === \"json\" ? JSON.stringify(this.editor.getJSON()) : this.getHTML();\n    }\n  }\n\n  rebuildEditor() {\n    if (this.editor) this.editor.destroy();\n\n    this.editor = this.__setupEditor(this);\n  }\n\n  getHTML() {\n    const html = this.editor.getHTML();\n    return html === '<p></p>' ? '' : html;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has(\"readonly\")) {\n      this.editor?.setEditable(!this.readonly);\n    }\n\n    if (changedProperties.has(\"content\")) {\n      this.editor.commands.setContent(this.serializer === \"json\" ? JSON.parse(this.content) : this.content);\n    }\n\n    if (\n      changedProperties.has(\"extensions\") ||\n      changedProperties.has(\"serializer\") ||\n      changedProperties.has(\"translations\")\n    ) {\n      this.rebuildEditor();\n    }\n\n    super.updated(changedProperties);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.editor.destroy();\n  }\n\n  addExtensions(...extensions) {\n    if (Array.isArray(extensions)) {\n      extensions = extensions.flat(1);\n    }\n\n    this.extensions = this.extensions.concat(extensions);\n  }\n\n  get __baseExtensions() {\n    return [\n      RicherTextKit.configure({\n        placeholder: this.placeholder || \"Start typing...\"\n      })\n    ]\n  }\n\n  allOptions() {\n    return Object.assign(\n      this.__defaultOptions()\n    );\n  }\n\n  __setupEditor() {\n    const editor = new Editor(this.allOptions());\n\n    return editor;\n  }\n\n  __defaultOptions() {\n    return {\n      element: this._createEditorRootElement(),\n      editable: !this.readonly,\n      extensions: this.__baseExtensions.concat(this.extensions),\n      content: this.serializer === \"json\" ? JSON.parse(this.content) : this.content,\n      autofocus: this.autofocus && !this.readonly,\n      editorProps: {\n        attributes: {\n          class: this.class,\n        },\n      },\n      onCreate: () => {\n        // The editor is ready.\n        this.emitChange();\n      },\n      onUpdate: ({ editor }) => {\n        // The content has changed.\n        this.requestUpdate();\n        this.emitChange();\n      },\n      onSelectionUpdate: () => {\n        // The selection has changed.\n        this.requestUpdate();\n      },\n    }\n  }\n\n  clear() {\n    this.editor.chain().clearContent(true).focus().run();\n  }\n\n  focus() {\n    this.editor.commands.focus();\n  }\n\n  blur() {\n    this.editor.commands.blur();\n  }\n\n  toggleBold() {\n    this.editor.chain().toggleBold().focus().run();\n  }\n\n  toggleItalic() {\n    this.editor.chain().toggleItalic().focus().run();\n  }\n\n  toggleUnderline() {\n    this.editor.chain().toggleUnderline().focus().run();\n  }\n\n  toggleCode() {\n    this.editor.chain().toggleCode().focus().run();\n  }\n\n  toggleStrike() {\n    this.editor.chain().toggleStrike().focus().run();\n  }\n\n  toggleHeadingLevel1() {\n    this.editor.chain().toggleHeading({ level: 1 }).focus().run();\n  }\n\n  toggleHeadingLevel2() {\n    this.editor.chain().toggleHeading({ level: 2 }).focus().run();\n  }\n\n  toggleHeadingLevel3() {\n    this.editor.chain().toggleHeading({ level: 3 }).focus().run();\n  }\n\n  toggleBulletList() {\n    this.editor.chain().toggleBulletList().focus().run();\n  }\n\n  toggleOrderedList() {\n    this.editor.chain().toggleOrderedList().focus().run();\n  }\n\n  setHorizontalRule() {\n    this.editor.chain().setHorizontalRule().focus().run();\n  }\n\n  toggleBlockquote() {\n    this.editor.chain().toggleBlockquote().focus().run();\n  }\n\n  toggleCodeBlock() {\n    this.editor.chain().toggleCodeBlock().focus().run();\n  }\n\n  toggleHighlight() {\n    this.editor.chain().toggleHighlight().focus().run();\n  }\n\n  undo() {\n    this.editor.chain().focus().undo().run();\n  }\n\n  redo() {\n    this.editor.chain().focus().redo().run();\n  }\n}\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../src/editor/extensions/iframelyEmbed.js"],
  "sourcesContent": ["import { Node, mergeAttributes } from \"@tiptap/core\";\nimport { html, render } from \"lit\";\n\nexport default Node.create({\n  name: 'iframelyEmbed',\n  group: 'block',\n  draggable: true,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    };\n  },\n\n  addAttributes() {\n    return {\n      href: { default: null },\n      previewHtml: { default: null },\n    };\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"div\", { 'data-node': 'iframely-embed', ...mergeAttributes(HTMLAttributes) }];\n  },\n\n  parseHTML() {\n    return [{ tag: \"div[data-node='iframely-embed']\" }];\n  },\n\n  addNodeView() {\n    return ({ node }) => {\n      const template = html`<div></div>`;\n\n      // Scratch element to render into.\n      const scratch = document.createElement(\"div\");\n      render(template, scratch);\n\n      const dom = scratch.firstElementChild;\n\n      const contentDiv = document.createElement(\"div\");\n      contentDiv.className = 'iframely-embed';\n      contentDiv.innerHTML = `${node.attrs.previewHtml}`;\n\n      dom.appendChild(contentDiv);\n\n      return {\n        dom\n      };\n    };\n  },\n  addCommands() {\n    return {\n      insertEmbed: (attrs) => ({ commands }) => {\n        return commands.insertContent({\n          type: this.name,\n          attrs: attrs,\n        });\n      },\n      updateEmbed:\n        (href, previewHtml) =>\n        ({ commands }) => {\n          let attributes = {\n            href: href,\n            previewHtml: previewHtml,\n          };\n\n          return commands.updateAttributes(this.name, attributes);\n        },\n    };\n  }\n});\n"],
  "mappings": ";AAAA,SAAS,MAAM,uBAAuB;AACtC,SAAS,MAAM,cAAc;AAE7B,IAAO,wBAAQ,KAAK,OAAO;AAAA,EACzB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,WAAW;AAAA,EAEX,aAAa;AACX,WAAO;AAAA,MACL,gBAAgB,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EAEA,gBAAgB;AACd,WAAO;AAAA,MACL,MAAM,EAAE,SAAS,KAAK;AAAA,MACtB,aAAa,EAAE,SAAS,KAAK;AAAA,IAC/B;AAAA,EACF;AAAA,EAEA,WAAW,EAAE,eAAe,GAAG;AAC7B,WAAO,CAAC,OAAO,EAAE,aAAa,kBAAkB,GAAG,gBAAgB,cAAc,EAAE,CAAC;AAAA,EACtF;AAAA,EAEA,YAAY;AACV,WAAO,CAAC,EAAE,KAAK,kCAAkC,CAAC;AAAA,EACpD;AAAA,EAEA,cAAc;AACZ,WAAO,CAAC,EAAE,KAAK,MAAM;AACnB,YAAM,WAAW;AAGjB,YAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,aAAO,UAAU,OAAO;AAExB,YAAM,MAAM,QAAQ;AAEpB,YAAM,aAAa,SAAS,cAAc,KAAK;AAC/C,iBAAW,YAAY;AACvB,iBAAW,YAAY,GAAG,KAAK,MAAM,WAAW;AAEhD,UAAI,YAAY,UAAU;AAE1B,aAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc;AACZ,WAAO;AAAA,MACL,aAAa,CAAC,UAAU,CAAC,EAAE,SAAS,MAAM;AACxC,eAAO,SAAS,cAAc;AAAA,UAC5B,MAAM,KAAK;AAAA,UACX;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MACA,aACE,CAAC,MAAM,gBACP,CAAC,EAAE,SAAS,MAAM;AAChB,YAAI,aAAa;AAAA,UACf;AAAA,UACA;AAAA,QACF;AAEA,eAAO,SAAS,iBAAiB,KAAK,MAAM,UAAU;AAAA,MACxD;AAAA,IACJ;AAAA,EACF;AACF,CAAC;",
  "names": []
}

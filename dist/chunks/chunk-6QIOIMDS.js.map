{
  "version": 3,
  "sources": ["../../src/editor/elements/RicherBubbleMenu.js"],
  "sourcesContent": ["import { html, css, LitElement } from 'lit';\n\nimport icons from \"../icons\";\n\nimport { Dropdown } from './Dropdown';\nimport { RoleTooltip } from 'role-components';\nRoleTooltip.define();\n\nexport class RicherBubbleMenu extends LitElement {\n  static styles = css`\n    .richer-text-editor--bubble-menu {\n      z-index: 100;\n      background-color: white;\n      border: 1px solid #ddd;\n      border-radius: 8px;\n      padding: 2px;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n      display: flex;\n      align-items: center;\n      gap: 4px;\n\n      .divider {\n        border-left: 1px solid #ddd;\n        height: 24px;\n      }\n\n      input {\n        border: none;\n        border-radius: 4px;\n        padding: 4px;\n        margin: 0;\n        display: inline-block;\n        font-size: 16px;\n        color: #333;\n        width: 200px;\n      }\n\n      .link-icon {\n        display: inline-block;\n        width: 16px;\n        height: 16px;\n        margin-right: 4px;\n        margin-left: 4px;\n      }\n\n      button {\n        background: none;\n        border: none;\n        cursor: pointer;\n        padding: 4px;\n        margin: 0;\n        display: inline-block;\n        font-size: 16px;\n        color: #333;\n\n        &:hover {\n          background-color: #e5e7eb;\n          border-radius: 4px;\n        }\n      }\n\n      button.caret {\n        position: relative;\n        padding-right: 16px;\n        margin: 0;\n\n        &::after {\n          content: '';\n          position: absolute;\n          top: 50%;\n          right: 8px;\n          transform: translateY(-50%);\n          border-width: 4px 4px 0;\n          border-style: solid;\n          border-color: #333 transparent transparent;\n        }\n      }\n    }\n  `\n\n  static get properties() {\n    return {\n      editor: { type: Function },\n\n      embedPath: { type: String },\n      urlMatchesPattern: { type: Boolean },\n      // State\n      editingLink: { type: Boolean, state: true },\n      isActive: { type: Function, state: true },\n      mode: { type: String, state: true },\n      embedPatterns: { type: Array, state: true },\n      oembed: { type: Boolean, state: true },\n    }\n  }\n\n  constructor() {\n    super();\n\n    this.editingLink = false;\n    this.mode = \"text\";\n    this.embedPath = \"/embeds\";\n    this.embedPatterns = [];\n    this.oembed = false;\n    this.urlMatchesPattern = false;\n\n    this.requestUpdate();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has(\"embedPath\") || changedProperties.has(\"oembed\")) {\n      this.fetchOEmbedPatterns();\n    }\n\n    if (changedProperties.has(\"urlMatchesPattern\")) {\n      this.requestUpdate();\n    }\n  }\n\n  removeNode() {\n    this.editor.chain().focus().deleteSelection().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  resizeImage(size) {\n    this.editor.chain().focus().setImageWidth(size).run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  toggleBold() {\n    this.editor.chain().focus().toggleBold().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  toggleItalic() {\n    this.editor.chain().focus().toggleItalic().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  toggleStrike() {\n    this.editor.chain().focus().toggleStrike().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  get isBold() {\n    return this.editor.isActive(\"bold\");\n  }\n\n  toggleLinkEditor() {\n    this.editingLink = !this.editingLink;\n\n    if (this.editingLink) {\n      // Add a small delay to ensure the input is focused after the element is rendered\n      setTimeout(() => {\n        this.shadowRoot.getElementById('link-url').focus();\n      }, 50);\n    }\n  }\n\n  toggleLeftAlignment() {\n    this.editor.chain().focus().setTextAlign(\"left\").run();\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  toggleCenterAlignment() {\n    this.editor.chain().focus().setTextAlign(\"center\").run();\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  toggleRightAlignment() {\n    this.editor.chain().focus().setTextAlign(\"right\").run();\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  clear() {\n    this.editor.chain().clearContent(true).focus().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  focus() {\n    this.editor.commands.focus();\n  }\n\n  blur() {\n    this.editor.commands.blur();\n  }\n\n  setLinkAndClose(embed = false) {\n    const url = this.shadowRoot.getElementById('link-url').value;\n\n    if (embed) {\n      fetch(`${this.embedPath}`, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ id: url }) })\n        .then(response => response.json())\n        .then(data => {\n          if (data.content) {\n            this.editor.chain().focus().deleteSelection().insertContent(data.content).run()\n          }\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    }\n\n    if (!embed && url) {\n      this.editor.chain().focus().extendMarkRange('link').setLink({ href: url }).run()\n    } else {\n      this.editor.chain().focus().unsetLink().run();\n    }\n\n    this.editingLink = false;\n    this.urlMatchesPattern = false;\n  }\n\n  _handleLinkSubmit(event) {\n    event.preventDefault();\n    this.setLinkAndClose();\n  }\n\n  deleteTable() {\n    this.editor.chain().focus().deleteTable().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  insertColumnLeft() {\n    this.editor.chain().focus().addColumnBefore().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  insertColumnRight() {\n    this.editor.chain().focus().addColumnAfter().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  deleteColumn() {\n    this.editor.chain().focus().deleteColumn().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  insertRowAbove() {\n    this.editor.chain().focus().addRowBefore().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  insertRowBelow() {\n    this.editor.chain().focus().addRowAfter().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  deleteRow() {\n    this.editor.chain().focus().deleteRow().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  toggleHeaderColumn() {\n    this.editor.chain().focus().toggleHeaderColumn().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  toggleHeaderRow() {\n    this.editor.chain().focus().toggleHeaderRow().run();\n\n    // Rebuild the bubble menu element to update the button state\n    this.requestUpdate();\n  }\n\n  fetchOEmbedPatterns() {\n    if (!this.oembed) {\n      return;\n    }\n\n    fetch(`${this.embedPath}/patterns`)\n      .then(response => response.json())\n      .then(data => {\n        this.embedPatterns = data;\n      });\n  }\n\n  onURLChange(event) {\n    if (this.oembed) {\n      var url = event.target.value;\n\n      const pattern = this.embedPatterns.find((pattern) => {\n        if (url == \"\") {\n          return false;\n        }\n        const regex = new RegExp(pattern.source)\n\n        return regex.test(url)\n      });\n\n      if (pattern) {\n        this.urlMatchesPattern = true;\n      } else {\n        this.urlMatchesPattern = false;\n      }\n\n      this.requestUpdate();\n    }\n  }\n\n  render() {\n    if (this.mode == \"table\") {\n      return html`\n        <div class=\"richer-text-editor--bubble-menu\">\n          <button class=\"toolbar-button\" @click=${() => this.insertColumnLeft()} aria-describedby=\"insert-column-left-tooltip\">\n            ${icons.get(\"insert-column-left\")}\n            <role-tooltip id=\"insert-column-left-tooltip\" hoist>Insert column before</role-tooltip>\n          </button>\n\n          <button class=\"toolbar-button\" @click=${() => this.insertColumnRight()} aria-describedby=\"insert-column-right-tooltip\">\n            ${icons.get(\"insert-column-right\")}\n            <role-tooltip id=\"insert-column-right-tooltip\" hoist>Insert column after</role-tooltip>\n          </button>\n\n          <button class=\"toolbar-button\" @click=${() => this.deleteColumn()} aria-describedby=\"column-remove-tooltip\">\n            ${icons.get(\"delete-column\")}\n            <role-tooltip id=\"column-remove-tooltip\" hoist>Delete column</role-tooltip>\n          </button>\n\n          <button class=\"toolbar-button\" @click=${() => this.insertRowAbove()} aria-describedby=\"insert-row-above-tooltip\">\n            ${icons.get(\"insert-row-above\")}\n            <role-tooltip id=\"insert-row-above-tooltip\" hoist>Insert row before</role-tooltip>\n          </button>\n\n          <button class=\"toolbar-button\" @click=${() => this.insertRowBelow()} aria-describedby=\"insert-row-below-tooltip\">\n            ${icons.get(\"insert-row-below\")}\n            <role-tooltip id=\"insert-row-below-tooltip\" hoist>Insert row after</role-tooltip>\n          </button>\n\n          <button class=\"toolbar-button\" @click=${() => this.deleteRow()} aria-describedby=\"delete-row-tooltip\">\n            ${icons.get(\"delete-row\")}\n            <role-tooltip id=\"delete-row-tooltip\" hoist>Delete row</role-tooltip>\n          </button>\n\n          <button class=\"toolbar-button\" @click=${() => this.toggleHeaderColumn()} aria-describedby=\"toggle-header-column-tooltip\">\n            ${icons.get(\"toggle-header-column\")}\n            <role-tooltip id=\"toggle-header-column-tooltip\" hoist>Toggle header column</role-tooltip>\n          </button>\n\n          <button class=\"toolbar-button\" @click=${() => this.toggleHeaderRow()} aria-describedby=\"toggle-header-row-tooltip\">\n            ${icons.get(\"toggle-header-row\")}\n            <role-tooltip id=\"toggle-header-row-tooltip\" hoist>Toggle header row</role-tooltip>\n          </button>\n\n          <div class=\"divider\"></div>\n\n          <button class=\"toolbar-button\" @click=${() => this.deleteTable()} aria-describedby=\"delete-table-tooltip\">\n            ${icons.get(\"delete-table\")}\n            <role-tooltip id=\"delete-table-tooltip\" hoist>Delete Table</role-tooltip>\n          </button>\n        </div>\n      `\n    } else if (this.mode == \"image\") {\n      return html`\n        <div class=\"richer-text-editor--bubble-menu\">\n          <button class=\"toolbar-button\" @click=${() => this.removeNode()}>\n            ${icons.get(\"delete\")}\n          </button>\n          <div class=\"divider\"></div>\n          <button class=\"toolbar-button\" @click=${() => this.resizeImage(\"25%\")}>\n            ${icons.get(\"small-square\")}\n          </button>\n          <button class=\"toolbar-button\" @click=${() => this.resizeImage(\"50%\")}>\n            ${icons.get(\"medium-square\")}\n          </button>\n          <button class=\"toolbar-button\" @click=${() => this.resizeImage(\"100%\")}>\n            ${icons.get(\"large-square\")}\n          </button>\n        </div>\n      `\n    } else if (this.mode == \"text\" && !this.editingLink) {\n      return html`\n        <div class=\"richer-text-editor--bubble-menu\">\n          <button class=\"toolbar-button\" @click=${() => this.toggleBold()}>\n            ${icons.get(\"bold\")}\n          </button>\n          <button class=\"toolbar-button\" @click=${() => this.toggleItalic()}>\n            ${icons.get(\"italic\")}\n          </button>\n          <button class=\"toolbar-button\" @click=${() => this.toggleStrike()}>\n            ${icons.get(\"strike\")}\n          </button>\n          <button class=\"toolbar-button\" @click=${() => this.toggleLinkEditor()}>${icons.get(\"link\")}</button>\n\n          <div class=\"divider\"></div>\n          <button class=\"toolbar-button\" @click=${() => this.toggleLeftAlignment()}>${icons.get(\"align-left\")}</button>\n          <button class=\"toolbar-button\" @click=${() => this.toggleCenterAlignment()}>${icons.get(\"align-center\")}</button>\n          <button class=\"toolbar-button\" @click=${() => this.toggleRightAlignment()}>${icons.get(\"align-right\")}</button>\n        <!--\n          <div class=\"divider\"></div>\n          <rte-dropdown>\n            <button slot=\"trigger\" class=\"caret\">${icons.get(\"highlight\")}</button>\n            <div slot=\"items\">\n              <rte-dropdown-item @click=\"${this.clear}\">Clear</rte-dropdown-item>\n              <rte-dropdown-item @click=\"${this.focus}\">Focus</rte-dropdown-item>\n              <rte-dropdown-item @click=\"${this.blur}\">Blur</rte-dropdown-item>\n            </div>\n          </rte-dropdown>\n          <div class=\"divider\"></div>\n          <rte-dropdown>\n            <button slot=\"trigger\" class=\"caret\">${icons.get(\"text-color\")}</button>\n            <div slot=\"items\">\n              <rte-dropdown-item @click=\"${this.clear}\">Clear</rte-dropdown-item>\n              <rte-dropdown-item @click=\"${this.focus}\">Focus</rte-dropdown-item>\n              <rte-dropdown-item @click=\"${this.blur}\">Blur</rte-dropdown-item>\n            </div>\n          </rte-dropdown> -->\n        </div>\n      `\n    } else {\n      return html`\n        <div class=\"richer-text-editor--bubble-menu\">\n          <form @submit=${this._handleLinkSubmit}>\n            <span class=\"link-icon\">${icons.get(\"link\")}</span>\n            <input id=\"link-url\" value=${this.editor.getAttributes(\"link\").href} @input=${this.onURLChange} type=\"url\" autofocus=\"true\" placeholder=\"Enter a URL\" />\n            <button @click=${() => this.setLinkAndClose()}>Done</button>\n            ${this.urlMatchesPattern ? html`<button @click=${() => this.setLinkAndClose(true)}>Embed</button>` : null}\n          </form>\n        </div>\n      `\n    }\n  }\n}\n\ncustomElements.define('richer-bubble-menu', RicherBubbleMenu);\n"],
  "mappings": "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",
  "names": ["pattern"]
}

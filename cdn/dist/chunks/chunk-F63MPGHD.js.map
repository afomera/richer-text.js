{
  "version": 3,
  "sources": ["../../../node_modules/@tiptap/extension-horizontal-rule/src/horizontal-rule.ts", "../../../src/editor/extensions/HorizontalRule.js"],
  "sourcesContent": ["import { mergeAttributes, Node, nodeInputRule } from '@tiptap/core'\nimport { NodeSelection, TextSelection } from '@tiptap/pm/state'\n\nexport interface HorizontalRuleOptions {\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    horizontalRule: {\n      /**\n       * Add a horizontal rule\n       */\n      setHorizontalRule: () => ReturnType\n    }\n  }\n}\n\nexport const HorizontalRule = Node.create<HorizontalRuleOptions>({\n  name: 'horizontalRule',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'hr' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHorizontalRule:\n        () => ({ chain, state }) => {\n          const { $to: $originTo } = state.selection\n\n          const currentChain = chain()\n\n          if ($originTo.parentOffset === 0) {\n            currentChain.insertContentAt(Math.max($originTo.pos - 2, 0), { type: this.name })\n          } else {\n            currentChain.insertContent({ type: this.name })\n          }\n\n          return (\n            currentChain\n              // set cursor after horizontal rule\n              .command(({ tr, dispatch }) => {\n                if (dispatch) {\n                  const { $to } = tr.selection\n                  const posAfter = $to.end()\n\n                  if ($to.nodeAfter) {\n                    if ($to.nodeAfter.isTextblock) {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1))\n                    } else if ($to.nodeAfter.isBlock) {\n                      tr.setSelection(NodeSelection.create(tr.doc, $to.pos))\n                    } else {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos))\n                    }\n                  } else {\n                    // add node after horizontal rule if it’s the end of the document\n                    const node = $to.parent.type.contentMatch.defaultType?.create()\n\n                    if (node) {\n                      tr.insert(posAfter, node)\n                      tr.setSelection(TextSelection.create(tr.doc, posAfter + 1))\n                    }\n                  }\n\n                  tr.scrollIntoView()\n                }\n\n                return true\n              })\n              .run()\n          )\n        },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n        type: this.type,\n      }),\n    ]\n  },\n})\n", "import HorizontalRule from '@tiptap/extension-horizontal-rule'\n\nexport default HorizontalRule.extend({\n  renderHTML({ HTMLAttributes }) {\n    return [\"div\", { class: \"richer-text-editor--hr\" }, [\"hr\", HTMLAttributes]];\n  },\n});\n"],
  "mappings": ";;;;;;;;;;;AAkBa,IAAA,iBAAiB,KAAK,OAA8B;EAC/D,MAAM;EAEN,aAAU;AACR,WAAO;MACL,gBAAgB,CAAA;;;EAIpB,OAAO;EAEP,YAAS;AACP,WAAO,CAAC,EAAE,KAAK,KAAI,CAAE;;EAGvB,WAAW,EAAE,eAAc,GAAE;AAC3B,WAAO,CAAC,MAAM,gBAAgB,KAAK,QAAQ,gBAAgB,cAAc,CAAC;;EAG5E,cAAW;AACT,WAAO;MACL,mBACE,MAAM,CAAC,EAAE,OAAO,MAAK,MAAM;AACzB,cAAM,EAAE,KAAK,UAAS,IAAK,MAAM;AAEjC,cAAM,eAAe,MAAK;AAE1B,YAAI,UAAU,iBAAiB,GAAG;AAChC,uBAAa,gBAAgB,KAAK,IAAI,UAAU,MAAM,GAAG,CAAC,GAAG,EAAE,MAAM,KAAK,KAAI,CAAE;QACjF,OAAM;AACL,uBAAa,cAAc,EAAE,MAAM,KAAK,KAAI,CAAE;QAC/C;AAED,eACE,aAEG,QAAQ,CAAC,EAAE,IAAI,SAAQ,MAAM;;AAC5B,cAAI,UAAU;AACZ,kBAAM,EAAE,IAAG,IAAK,GAAG;AACnB,kBAAM,WAAW,IAAI,IAAG;AAExB,gBAAI,IAAI,WAAW;AACjB,kBAAI,IAAI,UAAU,aAAa;AAC7B,mBAAG,aAAa,cAAc,OAAO,GAAG,KAAK,IAAI,MAAM,CAAC,CAAC;cAC1D,WAAU,IAAI,UAAU,SAAS;AAChC,mBAAG,aAAa,cAAc,OAAO,GAAG,KAAK,IAAI,GAAG,CAAC;cACtD,OAAM;AACL,mBAAG,aAAa,cAAc,OAAO,GAAG,KAAK,IAAI,GAAG,CAAC;cACtD;YACF,OAAM;AAEL,oBAAM,QAAO,KAAA,IAAI,OAAO,KAAK,aAAa,iBAAa,QAAA,OAAA,SAAA,SAAA,GAAA,OAAM;AAE7D,kBAAI,MAAM;AACR,mBAAG,OAAO,UAAU,IAAI;AACxB,mBAAG,aAAa,cAAc,OAAO,GAAG,KAAK,WAAW,CAAC,CAAC;cAC3D;YACF;AAED,eAAG,eAAc;UAClB;AAED,iBAAO;QACT,CAAC,EACA,IAAG;;;;EAMhB,gBAAa;AACX,WAAO;MACL,cAAc;QACZ,MAAM;QACN,MAAM,KAAK;OACZ;;;AAGN,CAAA;;;AC9FD,IAAO,yBAAQ,eAAe,OAAO;AAAA,EACnC,WAAW,EAAE,eAAe,GAAG;AAC7B,WAAO,CAAC,OAAO,EAAE,OAAO,yBAAyB,GAAG,CAAC,MAAM,cAAc,CAAC;AAAA,EAC5E;AACF,CAAC;",
  "names": []
}
